# SPDX-FileCopyrightText: 2025 itiquette/gommitlint <https://github.com/itiquette/gommitlint>
#
# SPDX-License-Identifier: EUPL-1.2

# Complete gommitlint configuration file with all possible fields
# This file shows every configuration option available in gommitlint

gommitlint:
  # Message configuration (subject and body)
  message:
    subject:
      max_length: 72 # Maximum allowed length for subject line
      case: "sentence" # Case style: "sentence", "lower", "upper", "camel", "ignore"
      forbid_endings: # List of forbidden subject line endings
        - "."
        - "!"
        - "?"
      require_imperative: false # Require imperative mood (e.g., "Add" not "Added")

    body:
      min_length: 10 # Minimum number of characters in body
      min_lines: 3 # Minimum number of lines in body
      allow_signoff_only: false # Allow commits with only sign-off lines in body

  # Conventional commits configuration
  conventional:
    required: true # Require conventional commit format
    types: # Allowed conventional commit types
      - "feat"
      - "fix"
      - "docs"
      - "style"
      - "refactor"
      - "perf"
      - "test"
      - "build"
      - "ci"
      - "chore"
      - "revert"
    scopes:
      [] # Allowed scopes (empty means all scopes allowed)
      # Example: ["core", "cli", "api", "docs"]
    allow_breaking: true # Allow breaking change marker (!)
    max_description_length: 72 # Maximum length for conventional description

  # Signing and security configuration
  signing:
    require_signature: false # Require GPG/SSH signatures
    require_verification: false # Require signature verification
    require_multi_signoff: false # Require multiple sign-off lines
    key_directory: "" # Directory containing allowed signing keys
    allowed_signers: # List of allowed signer identities
      # - "user@example.com"
      # - "Jane Doe <jane@example.com>"

  # Repository configuration
  repo:
    max_commits_ahead: 10 # Maximum commits ahead of reference branch
    reference_branch: "main" # Reference branch for ahead check

  # Jira configuration
  jira:
    projects: # Allowed project keys in Jira references
      - "EXAMPLE"
      - "DEMO"
    check_body_references: true # Also check commit body for references
    required: false # Require JIRA reference in commits

  # Spell check configuration
  spell:
    language: "en_US" # Language for spell checking
    custom_dictionary:
      [] # Additional allowed words
      # - "gommitlint"
      # - "config"

  # Rule configuration
  rules:
    # Rules to explicitly enable (highest priority)
    enabled:
      # - "Subject"           # Validates subject length, case, and suffix (consolidated rule)
      # - "ConventionalCommit"
      # - "Spell"             # Disabled by default, enable if needed

    # Rules to explicitly disable
    disabled:
      # - "CommitBody"       # Disabled by default
      # - "JiraReference"    # Disabled by default (organization-specific)
      # - "Spell"           # Disabled by default (requires dictionary setup)

    # Default enabled rules (if not in disabled list):
    # - Subject            # Consolidated: length, case, suffix, and imperative validation
    # - ConventionalCommit # Validates conventional commit format
    # - SignOff            # Validates Developer Certificate of Origin
    # - Signature          # Validates commit signatures
    # - SignedIdentity     # Validates signer identity matches author
    # - BranchAhead       # Validates commits ahead of reference branch

    # Default disabled rules (must be explicitly enabled):
    # - JiraReference      # Organization-specific
    # - CommitBody         # Not all projects require detailed bodies
    # - Spell              # Requires additional setup

  # Output configuration
  output:
    format: "text" # Output format: "text", "json", "github", "gitlab"
    verbose: false # Show detailed output
